generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                Int        @id @default(autoincrement())
  username          String     @unique @db.VarChar(60)
  password          String
  role              Role       @default(User)
  organizationId    Int?  
  profileImageURL   String?
  profileImageName  String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  deletedAt         DateTime?

  organization      organizations? @relation(fields: [organizationId], references: [id], onDelete: SetNull)
  projectRelation projectRelations[]
  refreshtoken      refreshtokens?
  
}

model projects {
  id      Int       @id @default(autoincrement())
  name    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  deletedAt  DateTime?

  projectRelation projectRelations?
}

model organizations {
  id                Int       @id @default(autoincrement())
  name              String
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  deletedAt         DateTime?

  users             users[]
  projectRelation   projectRelations[]
}

model projectRelations {
  id                Int       @id @default(autoincrement())
  userId            Int
  projectId         Int        @unique
  organizationId    Int?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  deletedAt         DateTime?

  user             users         @relation(fields: [userId], references: [id], onDelete: Cascade)
  project          projects      @relation(fields: [projectId], references: [id], onDelete: Cascade)
  organization     organizations? @relation(fields: [organizationId], references: [id], onDelete: Cascade)
}

model refreshtokens{
  id                Int        @id @default(autoincrement())
  userId            Int?       @unique
  token             String     @unique
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  deletedAt         DateTime?

  user      users? @relation(fields: [userId], references: [id], onDelete: SetNull)
}

enum Role {
  User
  User_ORG
  User_Admin
}




